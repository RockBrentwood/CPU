1.	Disclaimer
	──────────
	This software is in the public domain.
	Any prior copyright claims are relinquished.

	This software is distributed with no warranty whatever.
	The author takes no responsibility for the consequences of its use.

2.	Size
	────
	You can compile the assemblers small model (64k + 64k).
	Getting them any smaller would be a real trick.

3.	Compilation
	───────────
	The C source files that comprise a cross-assembler are in 3 categories.
	∙	Common code (doesn't need recompiling between different "flavors")
		―	Assem.c
		―	Reader.c
		―	Writer.c
	∙	"Flavor" specific files (generated by Yacc, compiled for every "flavor"))
		―	Syn*.c
		―	Syn*.h
	∙	Common code that depends on the Token.h file (compiled for every "flavor")
		―	Scan.c

4.	Token.h
	───────
	The yacc program defines some data structures and assigns values to various #define Macros used in the lexical analyzer.
	The lexical analyzer (Scan.c) file refers to these in the Token.h include file.
	The {assembler name}.h file generated by yacc (or renamed in the makefile) for the different .y files will be different.
	If you compile manually, insure that the correct {assembler name}.h file is copied to Token.h.

5.	Configuration Macros
	────────────────────
	DOSTEMP
	If neither the current directory or /usr/tmp is an acceptable directory for the temporary intermediate data file,
	change the initialization in Assem.c.

	NOGETOPT
	You should use this, if you don't have getopt() in your system library, or choose not to use it.

	NOSTRING, USEINDEX
	Phased out, since <string.h> is a part of C99, as is strchr(), which is declared in <string.h>.
	V7 UNIX, oriignally, in Frankenstein required this; but its native C compiler now supports C99.

6.	DOS
	───
	If you don't have a MS-DOS (or whatever) Yacc equivalent, but do have access to a another computer with Yacc,
	you can run that step there and take the resulting .c and .h files to the (whatever) system.
	The ‟yacc” program, itself, is now public domain, while ‟bison” is under GNU CopyLeft.

	The combination used (Turbo C and Bison) will report a half a dozen (varies) shift-reduce conflicts from Bison,
	and 3 (usually) warnings from the C compiler for the parser.
	No big deal.

	The Bison (the Free Software Foundation's Yacc clone) I used was disk 285 from the C Users Group.
	The version is dated January 1989.
	This is modified from the original, to adapt it to MS-DOS compilers, conventions, and libraries.

	(The following paragraph was copied out of this release)

	The C Users' Group (CUG) collects, maintains and distributes public domain C source code, publishes a magazine,
	The C Users' Journal and serves as a resource for C users.
	Several vendors have named CUG as the official users group for their implementation of C.
	For membership and subscription information contact

	The C Users' Group
	2601 Iowa
	Lawrence, KS 66047
	(913) 841-1631

7.	Porting to non-ASCII machines
	─────────────────────────────
	The Scan.c file contains a translate table, chartrantab,
	which classifies the input character set for the scanner's state machine.
	The reference to this table masks off the input character with 0x7f limiting the table to 128 elements.
	So if you want a source file in EBCDIC or to have umlauts in your variable names,
	a new table, and a new mask are called for.

	Debug in the lexical analyzer is turned on with a nonzero value in the DEBUG macro.

	Host machines that don't use two-complement negative numbers
	will have to compensate in the Writer.c outeval() switch statement for the cases of the byte codes:
	∙	';': put 8-bit unsigned integer,
	∙	'r': put 7-bit signed integer,
	∙	'x': put the upper 8-bits of a 16-bit unsigned integer,
	∙	'y': put the lower 8-bits of a 16-bit unsigned integer.

	Update Note (2021/08/13) ― archive editor:
	──────────────────────────────────────────
	This issue is still valid at the time of writing 2021 ― only now it's ASCII versus UTF-8 versus other UNICODE.
	Changes are planned to adapt this facility to handle UTF-8 and maybe other UNICODE implementations.

8.	History
	───────
	These used to be called the Framework cross-assemblers,
	but there's someone using the name for a database package or something like that.
	Why Frankenstein?
	Well, if you don't like the way it acts, chop off it's head and sew a new one on.
	(It was around Halloween).

	The .y files are generated from a more general machine description by an automated script.
	But this isn't portable enough and is too disgusting to distribute.

	Update Note (2021/08/11) ― archive editor:
	──────────────────────────────────────────
	Both this and the 1973 Edger Winter classic provide the same reason - that their respective creations were "Frankenedited”.
	In the case of the assembler, the more fitting name is that this assembler is a ‟Frankenwork”:
	a framework that reduces, in large measure, to a disjoint union of its respective parts.
	In the case of the song (originally from 1970),
	it was originally meant to be titled ‟The Double Drum Song” - because of its drum duet.

9.	Bug reports
	───────────
	Report bugs to markz@ssc.uucp.
	Especially screwups in the instruction generation tables.

	There is no telephone that I can be reached at.
	Please don't phone/fax Specialized Systems Consultants in reference to this software.
	What I do for a hobby, and what they do to make money are not connected.

	Mark Zenier
