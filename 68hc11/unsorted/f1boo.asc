*****************************************************
* BOOTLOADER FIRMWARE FOR MC68HC11F1 - 04 May 90
*****************************************************
* Features of this bootloader are...
*
*	Auto baud select between 7812, 1200, 9600, 5208
*	and 3906 (E = 2 MHz).
*	0 - 1024 byte variable length download:
*	reception of characters quits when an idle of at
*	least four character times occurs.  (Note: at 9600
*	baud rate this is almost five bit times and at
*	5208 and 3906 rates the timeout is even longer).
*	Jump to EEPROM at $FE00 if first download byte = $00.
*	Part I.D. at $BFD4 is $F1F1.
*	Opened From Listing by E.A.Sarlin for upgrading
*	old devices
*****************************************************
*	Revision B -
*
*	Added new baud rates: 5208, 3906.
*****************************************************
*	Revision A -
*
*	Added new baud rate: 9600.
*****************************************************
*	EQUates (use with index offset = $1000)
*
PORTD  	EQU	$08
DDRD   	EQU	$09
TOC1   	EQU	$16
SPCR   	EQU	$28                 (for DWOM bit)
BAUD   	EQU	$2B
SCCR1  	EQU	$2C
SCCR2  	EQU	$2D
SCSR   	EQU	$2E
SCDAT  	EQU	$2F
PPROG  	EQU	$3B
TEST1  	EQU	$3E
CONFIG 	EQU	$3F
*	Memory configuration equates
*
EEPSTR 	EQU	$FE00               Start of EEPROM
EEPEND 	EQU	$FFFF               End of EEPROM
RAMSTR 	EQU	$0000               Start of RAM
RAMEND 	EQU	$03FF               End of RAM
*	Delay constants
*
DELAYS 	EQU	3504                Delay at slow baud rate
DELAYF 	EQU	539                 Delay at fast baud rates
*
*****************************************************
	ORG    $BF00
*****************************************************
* Main bootloader starts here
*****************************************************
* RESET vector points to here
BEGIN	EQU	*
	LDS    #RAMEND             Initialize stack pntr
	LDX    #$1000              X points to registers
	BSET   SPCR,X $20          Select port D wire-OR mode
	LDD    #$B00C              Baud in A, SCCR2 in B
	STAA   BAUD,X              SCPx = /13, SCRx = /1
* Writing 1 to MSB of BAUD resets count chain
	STAB   SCCR2,X             Rx and Tx enabled
	LDD    #DELAYF             Delay for fast baud rates
	STD    TOC1,X              Set as default delay
* Send BREAK to signal start of download
	BSET   SCCR2,X $01         Set send break bit
	BRSET  PORTD,X $01 *       Wait for RxD pin to go low
	BCLR   SCCR2,X $01         Clear send break bit
*
	BRCLR  SCSR,X $20 *        Wait for RDRF
	LDAA   SCDAT,X             Read data
* Data will be $00 if BREAK or $00 received
	BNE    NOTZERO             Bypass jump if not $00
	JMP    EEPSTR              Jump to EEPROM if it was $00
NOTZERO	EQU	*
* Check div by 13 (9600 baud at 2 MHz)
	CMPA   #$F0                $F0 will be seen as $F0...
	BEQ    BAUDOK              if baud was correct
* Check div by 104 (1200 baud at 2 MHz)
	LDAB   #$33                Initialize B for this rate
	CMPA   #$80                $FF will be seen as $80...
	BEQ    SLOBAUD             if baud was correct
* Check div by 32 (3906 baud at 2 MHz)
* (equals: 8192 baud at 4.2 MHz)

	LDAB   #$05                Initialize B for this rate
	BITA   #$20                $FD shows as bit 5 clear...
	BEQ    SLOBAUD             if baud was correct
* Change to div by 16 (7812 baud at 2 MHz)
* (equals: 8192 baud at 2.1 MHz)
	LDAB   #$22                Initialize B for this rate
	STAB   BAUD,X
	BITA   #$08                $FF shows as bit 3 set...
	BNE    BAUDOK              if baud was correct
* Change to div by 24 (5208 baud at 2 MHz)
* (equals: 8192 BAUD at 3.15 MHz)
	LDAB   #$13                By default
SLOBAUD	EQU	*
	STAB   BAUD,X              Store baud rate
	LDD    #DELAYS             Switch to slower...
	STD    TOC1,X              delay constant
BAUDOK 	EQU	*
	LDY    #RAMSTR             Point to start of RAM

WAIT   	EQU	*
	LDD    TOC1,X              Move delay constant to D
WTLOOP 	EQU	*
	BRSET  SCSR,X $20 NEWONE   Exit loop if RDRF set
	XGDX                       Swap delay count to X
	DEX                        Decrement count
	XGDX                       Swap back to D
	BNE    WTLOOP              Loop if not timed out
	BRA    STAR                Quit download on timeout
NEWONE 	EQU	*
	LDAA   SCDAT,X             Get received data
	STAA   $00,Y               Store to next RAM location
	STAA   SCDAT,X             Transmit it for handshake
	INY                        Point to next RAM location
	CPY    #RAMEND+1           See if past end
	BNE    WAIT                If not, get another
STAR   	EQU	*
	JMP    RAMSTR              ** Exit to start of RAM **
************************************************
* Block fill unused bytes with zero
	BSZ    $BFD1-*
************************************************
* Boot ROM revision level in ASCII
*       (ORG     $BFD1)
	FCC    "B"
************************************************
* Mask set I.D. - ($0000 for ROMless parts)
*       (ORG     $BFD2)
	FDB    $0000
************************************************
* 11F1 I.D. - can be used to determine MCU type
*       (ORG     $BFD4)
	FDB    $F1F1
************************************************
* VECTORS - point to RAM for pseudo-vector JUMPs

	FDB    $100-60             SCI
	FDB    $100-57             SPI
	FDB    $100-54             PULSE ACCUM INPUT EDGE
	FDB    $100-51             PULSE ACCUM OVERFLOW
	FDB    $100-48             TIMER OVERFLOW
	FDB    $100-45             TIMER OUTPUT COMPARE 5
	FDB    $100-42             TIMER OUTPUT COMPARE 4
	FDB    $100-39             TIMER OUTPUT COMPARE 3
	FDB    $100-36             TIMER OUTPUT COMPARE 2
	FDB    $100-33             TIMER OUTPUT COMPARE 1
	FDB    $100-30             TIMER INPUT CAPTURE 3
	FDB    $100-27             TIMER INPUT CAPTURE 2
	FDB    $100-24             TIMER INPUT CAPTURE 1
	FDB    $100-21             REAL TIME INT
	FDB    $100-18             IRQ
	FDB    $100-15             XIRQ
	FDB    $100-12             SWI
	FDB    $100-9              ILLEGAL OP-CODE
	FDB    $100-6              COP FAIL
	FDB    $100-3              CLOCK MONITOR
	FDB    BEGIN               RESET
	END
