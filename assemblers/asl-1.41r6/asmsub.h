// AS-Portierung
// Unterfunktionen, vermischtes
typedef void (*TSwitchProc)(void);

extern Word ErrorCount, WarnCount;

void AsmSubInit(void);
long GTime(void);
CPUVar AddCPU(char *NewName, TSwitchProc Switcher);
bool AddCPUAlias(char *OrigName, char *AliasName);
void PrintCPUList(TSwitchProc NxtProc);
void ClearCPUList(void);
void UpString(char *s);
char *QuotPos(char *s, char Zeichen);
char *RQuotPos(char *s, char Zeichen);
char *FirstBlank(char *s);
void SplitString(char *Source, char *Left, char *Right, char *Trenner);
void KillBlanks(char *s);
void KillPrefBlanks(char *s);
void KillPostBlanks(char *s);
void TranslateString(char *s);
ShortInt StrCmp(char *s1, char *s2, LongInt Hand1, LongInt Hand2);
#define Memo(s) (strcmp(OpPart,(s))==0)
void AddSuffix(char *s, char *Suff);
void KillSuffix(char *s);
char *NamePart(char *Name);
char *PathPart(char *Name);
char *FloatString(Double f);
void StrSym(TempResult * t, bool WithSystem, char *Dest);
void ResetPageCounter(void);
void NewPage(ShortInt Level, bool WithFF);
void WrLstLine(char *Line);
void SetListLineVal(TempResult * t);
LargeWord ProgCounter(void);
LargeWord EProgCounter(void);
Word Granularity(void);
Word ListGran(void);
void ChkSpace(Byte Space);
void PrintChunk(ChunkList * NChunk);
void PrintUseList(void);
void ClearUseList(void);
void CompressLine(char *TokNam, Byte Num, char *Line);
void ExpandLine(char *TokNam, Byte Num, char *Line);
void KillCtrl(char *Line);
void ChkStack(void);
void ResetStack(void);
LongWord StackRes(void);
void AddCopyright(char *NewLine);
void WriteCopyrights(TSwitchProc NxtProc);
bool ChkSymbName(char *sym);
bool ChkMacSymbName(char *sym);
void WrErrorString(char *Message, char *Add, bool Warning, bool Fatal);
void WrError(Word Num);
void WrXError(Word Num, char *Message);
bool ChkRange(LargeInt Value, LargeInt Min, LargeInt Max);
void ChkIO(Word ErrNo);
void AddIncludeList(char *NewPath);
void RemoveIncludeList(char *RemPath);
void ClearOutList(void);
void AddToOutList(char *NewName);
void RemoveFromOutList(char *OldName);
char *GetFromOutList(void);
long DTime(long t1, long t2);
void asmsub_init(void);
